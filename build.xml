<!--
  The quollwriter build file.
-->

<project default="run" basedir=".">

  <property name="projectName" value="QuollWriter" />
  <property name="currVersion" value="2.7" />
  <property name="thesaurusVersion" value="1.0" />
  <property name="buildDir" value="./build" />
  <property name="imgsDir" value="./imgs" />
  <property name="srcDir" value="./src" />
  <property name="binDir" value="./bin" />
  <property name="jarName" value="${binDir}/${projectName}.jar" />
  <property name="toolsJarName" value="${binDir}/${projectName}-tools.jar" />
  <property name="imagesJarName" value="${binDir}/${projectName}-images.jar" />
  <property name="dataJarName" value="${binDir}/${projectName}-data.jar" />
  <property name="promptsJarName" value="${binDir}/${projectName}-prompts.jar" />
  <property name="dictionariesJarName" value="${binDir}/${projectName}-dictionaries.jar" />
  <property name="upgradeQuollWriterJar" value="${binDir}/${projectName}-upgrade.jar" />
  <property name="docsDir" value="./docs" />
  <property name="year" value="2018"/>
  <property name="packages" value="com.quollwriter.*"/>

  <property name="testDir" value="./test" />
  <property name="testSrcDir" value="${testDir}/src" />
  <property name="testBuildDir" value="${testDir}/build" />
  <property name="testBinDir" value="${testDir}/bin" />
  <property name="testJarName" value="${testBinDir}/${projectName}-tests.jar" />

  <target name="init">

    <mkdir dir="${buildDir}" />
    <mkdir dir="${srcDir}" />
    <mkdir dir="${binDir}" />
    <tstamp>
      <format property="TODAY" pattern="dd/MMM/yy" />
    </tstamp>

    <concat destfile="./data/version.txt">${currVersion}</concat>

  </target>

  <target name="cleanTestBuild">
    <delete dir="${testBuildDir}" />
  </target>

  <target name="testInit">

    <mkdir dir="${testBuildDir}" />
    <mkdir dir="${testSrcDir}" />
    <mkdir dir="${testBinDir}" />

  </target>

  <target name="cleanDocs">
  </target>

  <target name="cleanBuild">
    <delete dir="${buildDir}" />
  </target>

  <target name="run" depends="init, createJar, createPromptsJar, createDataJar, createImagesJar">
    <java classname="com.quollwriter.Startup"
          maxmemory="512m"
          fork="yes">
        <jvmarg value="-Xdebug" />
        <jvmarg value="-Xnoagent" />
        <!--
        Uncomment if you want to access the jvm via jdb -attach jdbconn
        -->
        <jvmarg value="-Xrunjdwp:transport=dt_shmem,server=y,suspend=n,address=jdbconn" />
        <!--
        <arg value="-Dlog4j.configuration=log4j.xml" />
        -->
      <classpath path="${jarName}:${imagesJarName}:${promptsJarName}:${dataJarName}" />
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </java>
  </target>

  <target name="runfx" depends="init, createJar, createPromptsJar, createDataJar, createImagesJar">
    <java classname="com.quollwriter.Startup_fx"
          maxmemory="512m"
          fork="yes">
        <arg value="_debugMode" />
        <jvmarg value="-Xdebug" />
        <jvmarg value="-Xnoagent" />
        <!--
        Uncomment if you want to access the jvm via jdb -attach jdbconn
        -->
        <jvmarg value="-Xrunjdwp:transport=dt_shmem,server=y,suspend=n,address=jdbconn" />
        <!--
        <arg value="-Dlog4j.configuration=log4j.xml" />
        -->
      <classpath path="${jarName}:${imagesJarName}:${promptsJarName}:${dataJarName}" />
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </java>
  </target>

  <target name="runOnly" depends="init">
    <java classname="com.quollwriter.Startup"
          maxmemory="512m"
          fork="yes">
        <arg value="-Dlog4j.configuration=log4j.xml" />
        <arg value="_debugMode" />
      <classpath path="${jarName}:${imagesJarName}:${promptsJarName}:${dataJarName}" />
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
        <fileset dir="./installer"
                 includes="log4j.xml" />
      </classpath>
    </java>
  </target>

  <target name="createImagesJar">
    <property name="title" value="QuollWriter Images" />

    <jar destfile="${imagesJarName}">
      <fileset dir="."
               includes="imgs/*.png" />
      <fileset dir="."
               includes="imgs/*.gif" />
      <fileset dir="."
               includes="imgs/bgs/thumbs/*.jpg" />
      <fileset dir="."
               includes="imgs/bgs/thumbs/*.gif" />
      <fileset dir="."
               includes="imgs/bgs/thumbs/*.png" />
      <fileset dir="."
               includes="imgs/bgs/*.jpg" />
      <fileset dir="."
               includes="imgs/bgs/*.gif" />
      <fileset dir="."
               includes="imgs/bgs/*.png" />
      <manifest>
        <attribute name="Built-By" value="${projectName}" />

        <section name="${package}">
          <attribute name="Implementation-Title" value="${title}" />
          <attribute name="Implementation-Vendor" value="${projectName}" />
          <attribute name="Implementation-Version" value="${currVersion} (${TODAY})" />
          <attribute name="Description" value="Contains the images used within ${projectName}" />
        </section>
      </manifest>
    </jar>

  </target>

  <target name="createDataJar">
    <property name="title" value="QuollWriter Data" />

    <jar destfile="${dataJarName}">
      <fileset dir=".">
        <include name="data/properties.xml" />
        <include name="data/default-project-properties.xml" />
        <include name="data/version.txt" />
        <include name="data/schema-version.txt" />
        <include name="data/log4j.properties" />
        <include name="data/doc-import-init.doc" />
        <include name="data/docx-import-init.docx" />
        <include name="data/prompt-websites.xml" />
        <include name="data/problem-finder-rules.xml" />
        <include name="data/schema/**" />
        <include name="data/export/**" />
        <include name="data/prompts/**.txt" />
        <include name="data/word-syllable-counts.txt" />
        <include name="data/typewriter-key.wav" />
        <include name="data/achievement.wav" />
        <include name="data/achievements.xml" />
        <include name="data/tips.xml" />
        <include name="data/whats-new.xml" />
        <include name="data/object-names.xml" />
        <include name="data/test-book.xml" />
        <include name="data/edit-position-example.png" />
        <include name="data/compressed-chapter-context-menu.png" />
        <include name="data/none-compressed-chapter-context-menu.png" />
        <include name="data/default-find-image.png" />
        <include name="data/qw-editors-message-popup.png" />
        <include name="data/editor-no-avatar.png" />
        <include name="data/editors-schema-version.txt" />
        <include name="data/editor-schema/**" />
        <include name="data/document-normal.png" />
        <include name="data/document-error.png" />
        <include name="data/project-info-schema/**" />
        <include name="data/project-info-schema-version.txt" />
        <include name="data/default-style.css" />
        <include name="data/asset-layout-0-n.png" />
        <include name="data/asset-layout-1-n.png" />
        <include name="data/asset-layout-2-n.png" />
        <include name="data/asset-layout-3-n.png" />
        <include name="data/asset-layout-4-n.png" />
        <include name="data/asset-layout-5-n.png" />
        <include name="data/asset-layout-6-n.png" />
        <include name="data/asset-layout-7-n.png" />
        <include name="data/asset-layout-8-n.png" />
        <include name="data/asset-layout-*" />
        <include name="data/default-ui-language-strings.json" />
        <include name="data/ui-language-strings/**" />
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${projectName}" />

        <section name="${package}">
          <attribute name="Implementation-Title" value="${title}" />
          <attribute name="Implementation-Vendor" value="${projectName}" />
          <attribute name="Implementation-Version" value="${currVersion} (${TODAY})" />
          <attribute name="Description" value="Contains the data files (properties etc) used within ${projectName}" />
        </section>
      </manifest>
    </jar>

  </target>

  <target name="createPromptsJar">
    <property name="title" value="QuollWriter Prompts" />

    <jar destfile="${promptsJarName}">
      <fileset dir=".">
        <include name="data/prompts/*.txt" />
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${projectName}" />

        <section name="${package}">
          <attribute name="Implementation-Title" value="${title}" />
          <attribute name="Implementation-Vendor" value="${projectName}" />
          <attribute name="Implementation-Version" value="${currVersion} (${TODAY})" />
          <attribute name="Description" value="Contains the prompt files used within ${projectName}" />
        </section>
      </manifest>
    </jar>

  </target>

  <target name="createLanguageFiles">

    <delete file="./language-files/output/English.zip" />
    <delete file="./language-files/output/English-dictionary-only.zip" />
    <delete file="./language-files/output/Czech.zip" />
    <delete file="./language-files/output/Dutch.zip" />
    <delete file="./language-files/output/French.zip" />
    <delete file="./language-files/output/German.zip" />
    <delete file="./language-files/output/Italian.zip" />
    <delete file="./language-files/output/Polish.zip" />
    <delete file="./language-files/output/Russian.zip" />
    <delete file="./language-files/output/Spanish.zip" />

    <zip destfile="./language-files/output/English.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/English.zip" />
        <include name="thesaurus/English/index.txt" />
        <include name="thesaurus/English/words.txt" />
        <include name="thesaurus/English/version.txt" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/English-dictionary-only.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/English.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/Czech.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/Czech.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/Dutch.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/Dutch.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/French.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/French.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/German.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/German.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/Italian.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/Italian.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/Polish.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/Polish.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/Russian.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/Russian.zip" />
      </fileset>
    </zip>

    <zip destfile="./language-files/output/Spanish.zip"
         update="yes">
      <fileset dir="./language-files">
        <include name="dictionaries/Spanish.zip" />
      </fileset>
    </zip>

  </target>

  <target name="createJar" depends="fullCompile">
    <property name="title" value="QuollWriter" />
    <property name="package" value="com/quollwriter" />

    <jar destfile="${jarName}" >
      <fileset dir="${buildDir}"
               excludes="com/quollwriter/tools/*"
               includes="**/*.class" />
      <manifest>
        <attribute name="Built-By" value="${projectName}" />

        <section name="${package}">
          <attribute name="Implementation-Title" value="${title}" />
          <attribute name="Implementation-Vendor" value="${projectName}" />
          <attribute name="Implementation-Version" value="${currVersion} (${TODAY})" />
        </section>
      </manifest>
    </jar>

  </target>

  <target name="createToolsJar" depends="fullCompile">
    <property name="title" value="QuollWriter Tools" />
    <property name="package" value="com/quollwriter/tools" />

    <jar destfile="${toolsJarName}" >
      <fileset dir="${buildDir}"
               includes="com/quollwriter/tools/*.class" />
      <manifest>
        <attribute name="Built-By" value="${projectName}" />

        <section name="${package}">
          <attribute name="Implementation-Title" value="${title}" />
          <attribute name="Implementation-Vendor" value="${projectName}" />
          <attribute name="Implementation-Version" value="${currVersion} (${TODAY})" />
        </section>
      </manifest>
    </jar>

  </target>

  <target name="fullCompile" depends="cleanBuild, init">
    <antcall target="compile" />
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${srcDir}"
           destdir="${buildDir}"
           debug="on"
           deprecation="on"
    	   target="1.8"
           nowarn="off"
           excludes="**/svn/**,**/ui/fx/**,**/*_fx*">
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </javac>

  </target>

  <!--
    A target for creating the javadocs for the code.
  -->
  <target name="javadoc" depends="init,fullCompile">

    <delete dir="${docsDir}" />
    <mkdir dir="${docsDir}" />

    <javadoc destdir="${docsDir}"
             sourcepath="${srcDir}"
             packagenames="${packages}"
             failonerror="true"
             windowtitle="${projectName} ${currVersion}"
             use="true"
             doctitle="${projectName} ${currVersion}"
             private="false"
             stylesheetfile="data/javadocsStyle.css"
             noindex="false"
             splitindex="true"
             bottom="&lt;center>&amp;#160;&amp;#160;&lt;/a>Copyright &amp;#169; ${year} Gary Bentley. All Rights Reserved.&lt;/dd>&lt;/center>">
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>

       <link href="http://java.sun.com/j2se/1.4.2/docs/api" />
<!--
       <link href="http://jasperreports.sourceforge.net/api/index.html" />

-->
    </javadoc>
  </target>

  <target name="createPromptFiles" depends="init">
    <java classname="com.quollwriter.tools.CreatePromptFiles"
          maxmemory="512m"
          fork="yes">
        <arg value="./prompts.txt" />
        <arg value="./data/prompts/ids.txt" />
        <arg value="./data/prompts/" />
      <classpath path="${jarName};${toolsJarName}" />
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </java>
  </target>

  <target name="createDictionaryFiles" depends="init">
    <java classname="com.quollwriter.tools.CreateDictionaryFiles"
          maxmemory="512m"
          fork="yes">
        <arg value="./dictionaries" />
      <classpath path="${jarName};${toolsJarName}" />
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </java>
  </target>

  <target name="getPromptAuthors" depends="init">
    <java classname="com.quollwriter.tools.GetPromptAuthors"
          maxmemory="512m"
          fork="yes">
        <arg value="./data/prompts/" />
      <classpath path="${jarName};${toolsJarName}" />
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </java>
  </target>

  <target name="dictTest" depends="init">
    <javac srcdir="."
           destdir="."
           debug="on"
           deprecation="on"
           nowarn="on"
           includes="DictionaryTest.java">
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </javac>

    <java classname="DictionaryTest"
          maxmemory="512m"
          fork="yes">
      <classpath path=".;${jarName};${toolsJarName}" />
      <classpath>
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
    </java>

  </target>

  <target name="runTests" depends="createTestsJar">
    <junit fork="yes"
           printsummary="yes">
      <classpath>
        <fileset dir="${binDir}"
                 includes="*.jar" />
        <fileset dir="${testBinDir}"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
      </classpath>
      <formatter type="plain" />
      <test name="com.quollwriter.test.problemFinder.ProblemFinderTestSuite"
            outfile="./test/results/problem-finder-results" />
      <test name="com.quollwriter.test.text.TextTestSuite"
            outfile="./test/results/text-results" />
      <!--
      <test name="com.quollwriter.test.db.DatabaseTestSuite"
            outfile="./test/results/db-results" />
      <test name="com.quollwriter.test.editors.messages.MessagesTestSuite"
            outfile="./test/results/editors-messages-results" />
      -->
    </junit>

  </target>

  <target name="compileTests" depends="cleanTestBuild,testInit">
    <javac srcdir="${testSrcDir}"
           destdir="${testBuildDir}"
           debug="on"
           deprecation="on"
           nowarn="on"
           excludes="**/svn/**">
      <classpath>
        <fileset dir="${binDir}"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/"
                 includes="*.jar" />
        <fileset dir="./3rd-party-jars/docx4j"
                 includes="*.jar" />
        <fileset dir="${testBinDir}"
                 includes="*.jar" />
      </classpath>
    </javac>

  </target>

  <target name="createTestsJar" depends="compileTests">
    <property name="title" value="QuollWriter-tests" />
    <property name="package" value="com/quollwriter/test" />

    <jar destfile="${testJarName}" >
      <fileset dir="${testBuildDir}"
               includes="**/*.class" />
      <fileset dir="test/data"
               includes="*.xml" />
      <manifest>
        <attribute name="Built-By" value="${projectName}" />

        <section name="${package}">
          <attribute name="Implementation-Title" value="${title}" />
          <attribute name="Implementation-Vendor" value="${projectName}" />
          <attribute name="Implementation-Version" value="${currVersion} (${TODAY})" />
        </section>
      </manifest>
    </jar>

  </target>

</project>
